//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "api__usage_logs")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub key_id: i64,
    pub timestamp: DateTime,
    #[sea_orm(column_type = "Text")]
    pub endpoint: String,
    pub response_time_ms: Option<i32>,
    pub status_code: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::api_keys::Entity",
        from = "Column::KeyId",
        to = "super::api_keys::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ApiKeys,
}

impl Related<super::api_keys::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApiKeys.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
